{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farde\\\\OneDrive\\\\Startup\\\\Prop-Firm\\\\frontend\\\\src\\\\pages\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Correctly import jwtDecode as a named export\nimport './styles/SignIn.css'; // Import the CSS file for styling\nimport { signInWithEmail, signInWithGoogle } from '../services/authService'; // Import the mock backend service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleGoogleSignIn = useCallback(async response => {\n    const userObject = jwtDecode(response.credential);\n    const googleEmail = userObject.email;\n\n    // Sign in with Google email\n    const signInResponse = await signInWithGoogle(googleEmail);\n    console.log('Google sign-in response:', signInResponse); // Log the response\n    if (signInResponse.success) {\n      navigate('/dashboard');\n    } else {\n      setErrorMessage('Account not found. Please sign up.');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      /* global google */\n      google.accounts.id.initialize({\n        client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        // Use environment variable\n        callback: handleGoogleSignIn\n      });\n      google.accounts.id.renderButton(document.getElementById('google-sign-in-button'), {\n        theme: 'outline',\n        size: 'large'\n      });\n    };\n    if (window.google) {\n      initializeGoogleSignIn();\n    } else {\n      window.addEventListener('load', initializeGoogleSignIn);\n    }\n    return () => {\n      window.removeEventListener('load', initializeGoogleSignIn);\n    };\n  }, [handleGoogleSignIn]); // Add handleGoogleSignIn to the dependency array\n\n  const handleSignIn = async () => {\n    const response = await signInWithEmail(email, password);\n    console.log('Sign-in response:', response); // Log the response\n    if (response.success) {\n      navigate('/dashboard');\n    } else {\n      setErrorMessage(response.message || 'Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"or-text\",\n      children: \"OR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-sign-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"google-sign-in-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"iNZeBLVcsOx+PTDefuxest2iC2o=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","jwtDecode","signInWithEmail","signInWithGoogle","jsxDEV","_jsxDEV","SignIn","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleGoogleSignIn","response","userObject","credential","googleEmail","signInResponse","console","log","success","initializeGoogleSignIn","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","renderButton","document","getElementById","theme","size","window","addEventListener","removeEventListener","handleSignIn","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/farde/OneDrive/Startup/Prop-Firm/frontend/src/pages/SignIn.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // Correctly import jwtDecode as a named export\r\nimport './styles/SignIn.css'; // Import the CSS file for styling\r\nimport { signInWithEmail, signInWithGoogle } from '../services/authService'; // Import the mock backend service\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoogleSignIn = useCallback(async (response) => {\r\n    const userObject = jwtDecode(response.credential);\r\n    const googleEmail = userObject.email;\r\n\r\n    // Sign in with Google email\r\n    const signInResponse = await signInWithGoogle(googleEmail);\r\n    console.log('Google sign-in response:', signInResponse); // Log the response\r\n    if (signInResponse.success) {\r\n      navigate('/dashboard');\r\n    } else {\r\n      setErrorMessage('Account not found. Please sign up.');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleSignIn = () => {\r\n      /* global google */\r\n      google.accounts.id.initialize({\r\n        client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID, // Use environment variable\r\n        callback: handleGoogleSignIn,\r\n      });\r\n      google.accounts.id.renderButton(\r\n        document.getElementById('google-sign-in-button'),\r\n        { theme: 'outline', size: 'large' }\r\n      );\r\n    };\r\n\r\n    if (window.google) {\r\n      initializeGoogleSignIn();\r\n    } else {\r\n      window.addEventListener('load', initializeGoogleSignIn);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('load', initializeGoogleSignIn);\r\n    };\r\n  }, [handleGoogleSignIn]); // Add handleGoogleSignIn to the dependency array\r\n\r\n  const handleSignIn = async () => {\r\n    const response = await signInWithEmail(email, password);\r\n    console.log('Sign-in response:', response); // Log the response\r\n    if (response.success) {\r\n      navigate('/dashboard');\r\n    } else {\r\n      setErrorMessage(response.message || 'Invalid email or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>Sign In</h2>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div className=\"form-group\">\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter your password\"\r\n        />\r\n      </div>\r\n      <div className=\"sign-in-btn\">\r\n        <button onClick={handleSignIn}>Sign In</button>\r\n      </div>\r\n      <div className=\"or-text\">OR</div>\r\n      <div className=\"google-sign-in\">\r\n        <div id=\"google-sign-in-button\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AACxC,OAAO,qBAAqB,CAAC,CAAC;AAC9B,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMiB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,kBAAkB,GAAGhB,WAAW,CAAC,MAAOiB,QAAQ,IAAK;IACzD,MAAMC,UAAU,GAAGhB,SAAS,CAACe,QAAQ,CAACE,UAAU,CAAC;IACjD,MAAMC,WAAW,GAAGF,UAAU,CAACT,KAAK;;IAEpC;IACA,MAAMY,cAAc,GAAG,MAAMjB,gBAAgB,CAACgB,WAAW,CAAC;IAC1DE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,cAAc,CAAC,CAAC,CAAC;IACzD,IAAIA,cAAc,CAACG,OAAO,EAAE;MAC1BT,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM;MACLD,eAAe,CAAC,oCAAoC,CAAC;IACvD;EACF,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,MAAM0B,sBAAsB,GAAGA,CAAA,KAAM;MACnC;MACAC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;QAC5BC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;QAAE;QACnDC,QAAQ,EAAElB;MACZ,CAAC,CAAC;MACFU,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACO,YAAY,CAC7BC,QAAQ,CAACC,cAAc,CAAC,uBAAuB,CAAC,EAChD;QAAEC,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAQ,CACpC,CAAC;IACH,CAAC;IAED,IAAIC,MAAM,CAACd,MAAM,EAAE;MACjBD,sBAAsB,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLe,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAEhB,sBAAsB,CAAC;IACzD;IAEA,OAAO,MAAM;MACXe,MAAM,CAACE,mBAAmB,CAAC,MAAM,EAAEjB,sBAAsB,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,CAACT,kBAAkB,CAAC,CAAC,CAAC,CAAC;;EAE1B,MAAM2B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM1B,QAAQ,GAAG,MAAMd,eAAe,CAACM,KAAK,EAAEE,QAAQ,CAAC;IACvDW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAAC,CAAC,CAAC;IAC5C,IAAIA,QAAQ,CAACO,OAAO,EAAE;MACpBT,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM;MACLD,eAAe,CAACG,QAAQ,CAAC2B,OAAO,IAAI,2BAA2B,CAAC;IAClE;EACF,CAAC;EAED,oBACEtC,OAAA;IAAKuC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBxC,OAAA;MAAAwC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfrC,YAAY,iBAAIP,OAAA;MAAGuC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEjC;IAAY;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE5C,OAAA;MAAKuC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxC,OAAA;QAAAwC,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB5C,OAAA;QACE6C,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE3C,KAAM;QACb4C,QAAQ,EAAGC,CAAC,IAAK5C,QAAQ,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAkB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5C,OAAA;MAAKuC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxC,OAAA;QAAAwC,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvB5C,OAAA;QACE6C,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEzC,QAAS;QAChB0C,QAAQ,EAAGC,CAAC,IAAK1C,WAAW,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5C,OAAA;MAAKuC,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BxC,OAAA;QAAQmD,OAAO,EAAEd,YAAa;QAAAG,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACN5C,OAAA;MAAKuC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjC5C,OAAA;MAAKuC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BxC,OAAA;QAAKsB,EAAE,EAAC;MAAuB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1C,EAAA,CArFID,MAAM;EAAA,QAION,WAAW;AAAA;AAAAyD,EAAA,GAJxBnD,MAAM;AAuFZ,eAAeA,MAAM;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}