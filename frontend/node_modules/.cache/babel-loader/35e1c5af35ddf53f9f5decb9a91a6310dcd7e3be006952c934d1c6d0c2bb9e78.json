{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate,useLocation}from'react-router-dom';import{jwtDecode}from'jwt-decode';// Correctly import jwtDecode as a named export\nimport'./styles/SignIn.css';// Import the CSS file for styling\nimport{signInWithEmail,signInWithGoogle}from'../services/authService';// Import the mock backend service\nimport{useAuth}from'../context/AuthContext';// Import useAuth from AuthContext\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignIn=()=>{var _location$state;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[errorMessage,setErrorMessage]=useState('');const navigate=useNavigate();const location=useLocation();const{login}=useAuth();// Use the login function from AuthContext\nconst from=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.from)||'/dashboard';const handleGoogleSignIn=useCallback(async response=>{const userObject=jwtDecode(response.credential);const googleEmail=userObject.email;// Sign in with Google email\nconst signInResponse=await signInWithGoogle(googleEmail);console.log('Google sign-in response:',signInResponse);// Log the response\nif(signInResponse.success){login();// Update the authentication state\nnavigate(from);}else{setErrorMessage('Account not found. Please sign up.');}},[navigate,login,from]);useEffect(()=>{const initializeGoogleSignIn=()=>{/* global google */google.accounts.id.initialize({client_id:process.env.REACT_APP_GOOGLE_CLIENT_ID,// Use environment variable\ncallback:handleGoogleSignIn});google.accounts.id.renderButton(document.getElementById('google-sign-in-button'),{theme:'outline',size:'large'});};if(window.google){initializeGoogleSignIn();}else{window.addEventListener('load',initializeGoogleSignIn);}return()=>{window.removeEventListener('load',initializeGoogleSignIn);};},[handleGoogleSignIn]);// Add handleGoogleSignIn to the dependency array\nconst handleSignIn=async()=>{const response=await signInWithEmail(email,password);console.log('Sign-in response:',response);// Log the response\nif(response.success){login();// Update the authentication state\nnavigate(from);}else{setErrorMessage(response.message||'Invalid email or password');}};const handleSignUpRedirect=()=>{navigate('/sign-up');};const handleForgotPasswordRedirect=()=>{navigate('/forgot-password');};return/*#__PURE__*/_jsxs(\"div\",{className:\"sign-in\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign In\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Enter your email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter your password\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sign-in-btn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSignIn,children:\"Sign In\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"forget-password\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleForgotPasswordRedirect,children:\"Forgot Password?\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"or-text\",children:\"OR\"}),/*#__PURE__*/_jsx(\"div\",{className:\"google-sign-in\",children:/*#__PURE__*/_jsx(\"div\",{id:\"google-sign-in-button\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"sign-up-prompt\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"button\",{onClick:handleSignUpRedirect,children:\"Sign Up\"})]})})]});};export default SignIn;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","jwtDecode","signInWithEmail","signInWithGoogle","useAuth","jsx","_jsx","jsxs","_jsxs","SignIn","_location$state","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","location","login","from","state","handleGoogleSignIn","response","userObject","credential","googleEmail","signInResponse","console","log","success","initializeGoogleSignIn","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","renderButton","document","getElementById","theme","size","window","addEventListener","removeEventListener","handleSignIn","message","handleSignUpRedirect","handleForgotPasswordRedirect","className","children","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/farde/OneDrive/Startup/Prop-Firm/frontend/src/pages/SignIn.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {jwtDecode} from 'jwt-decode'; // Correctly import jwtDecode as a named export\r\nimport './styles/SignIn.css'; // Import the CSS file for styling\r\nimport { signInWithEmail, signInWithGoogle } from '../services/authService'; // Import the mock backend service\r\nimport { useAuth } from '../context/AuthContext'; // Import useAuth from AuthContext\r\n\r\nconst SignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { login } = useAuth(); // Use the login function from AuthContext\r\n\r\n  const from = location.state?.from || '/dashboard';\r\n\r\n  const handleGoogleSignIn = useCallback(async (response) => {\r\n    const userObject = jwtDecode(response.credential);\r\n    const googleEmail = userObject.email;\r\n\r\n    // Sign in with Google email\r\n    const signInResponse = await signInWithGoogle(googleEmail);\r\n    console.log('Google sign-in response:', signInResponse); // Log the response\r\n    if (signInResponse.success) {\r\n      login(); // Update the authentication state\r\n      navigate(from);\r\n    } else {\r\n      setErrorMessage('Account not found. Please sign up.');\r\n    }\r\n  }, [navigate, login, from]);\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleSignIn = () => {\r\n      /* global google */\r\n      google.accounts.id.initialize({\r\n        client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID, // Use environment variable\r\n        callback: handleGoogleSignIn,\r\n      });\r\n      google.accounts.id.renderButton(\r\n        document.getElementById('google-sign-in-button'),\r\n        { theme: 'outline', size: 'large' }\r\n      );\r\n    };\r\n\r\n    if (window.google) {\r\n      initializeGoogleSignIn();\r\n    } else {\r\n      window.addEventListener('load', initializeGoogleSignIn);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('load', initializeGoogleSignIn);\r\n    };\r\n  }, [handleGoogleSignIn]); // Add handleGoogleSignIn to the dependency array\r\n\r\n  const handleSignIn = async () => {\r\n    const response = await signInWithEmail(email, password);\r\n    console.log('Sign-in response:', response); // Log the response\r\n    if (response.success) {\r\n      login(); // Update the authentication state\r\n      navigate(from);\r\n    } else {\r\n      setErrorMessage(response.message || 'Invalid email or password');\r\n    }\r\n  };\r\n\r\n  const handleSignUpRedirect = () => {\r\n    navigate('/sign-up');\r\n  };\r\n\r\n  const handleForgotPasswordRedirect = () => {\r\n    navigate('/forgot-password');\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>Sign In</h2>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div className=\"form-group\">\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter your password\"\r\n        />\r\n      </div>\r\n      <div className=\"sign-in-btn\">\r\n        <button onClick={handleSignIn}>Sign In</button>\r\n      </div>\r\n      <div className='forget-password'>\r\n        <button onClick={handleForgotPasswordRedirect}>Forgot Password?</button>\r\n      </div>\r\n      <div className=\"or-text\">OR</div>\r\n      <div className=\"google-sign-in\">\r\n        <div id=\"google-sign-in-button\"></div>\r\n      </div>\r\n      <div className=\"sign-up-prompt\">\r\n        <p>Don't have an account? <button onClick={handleSignUpRedirect}>Sign Up</button></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}