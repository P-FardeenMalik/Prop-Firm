{"ast":null,"code":"export const sendVerificationEmail = async email => {\n  // Simulate sending an email with OTP\n  console.log(`Sending verification email to ${email}`);\n  return {\n    success: true,\n    otp: '123456'\n  }; // Mock OTP\n};\nexport const verifyOtp = async (email, otp) => {\n  // Simulate OTP verification\n  console.log(`Verifying OTP for ${email}`);\n  return otp === '123456'; // Mock OTP verification\n};\nexport const createAccount = async (email, password) => {\n  // Simulate account creation\n  console.log(`Creating account for ${email}`);\n  return {\n    success: true\n  }; // Mock account creation\n};","map":{"version":3,"names":["sendVerificationEmail","email","console","log","success","otp","verifyOtp","createAccount","password"],"sources":["C:/Users/farde/OneDrive/Startup/Prop-Firm/frontend/src/services/authService.js"],"sourcesContent":["export const sendVerificationEmail = async (email) => {\r\n    // Simulate sending an email with OTP\r\n    console.log(`Sending verification email to ${email}`);\r\n    return { success: true, otp: '123456' }; // Mock OTP\r\n  };\r\n  \r\n  export const verifyOtp = async (email, otp) => {\r\n    // Simulate OTP verification\r\n    console.log(`Verifying OTP for ${email}`);\r\n    return otp === '123456'; // Mock OTP verification\r\n  };\r\n  \r\n  export const createAccount = async (email, password) => {\r\n    // Simulate account creation\r\n    console.log(`Creating account for ${email}`);\r\n    return { success: true }; // Mock account creation\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAOC,KAAK,IAAK;EAClD;EACAC,OAAO,CAACC,GAAG,CAAC,iCAAiCF,KAAK,EAAE,CAAC;EACrD,OAAO;IAAEG,OAAO,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAS,CAAC,CAAC,CAAC;AAC3C,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOL,KAAK,EAAEI,GAAG,KAAK;EAC7C;EACAH,OAAO,CAACC,GAAG,CAAC,qBAAqBF,KAAK,EAAE,CAAC;EACzC,OAAOI,GAAG,KAAK,QAAQ,CAAC,CAAC;AAC3B,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAON,KAAK,EAAEO,QAAQ,KAAK;EACtD;EACAN,OAAO,CAACC,GAAG,CAAC,wBAAwBF,KAAK,EAAE,CAAC;EAC5C,OAAO;IAAEG,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}