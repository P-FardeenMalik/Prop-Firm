{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farde\\\\OneDrive\\\\Startup\\\\Prop-Firm\\\\frontend\\\\src\\\\pages\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/ForgotPassword.css'; // Import the CSS file for styling\nimport { sendPasswordResetEmail } from '../services/authService'; // Import the mock backend service\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    const response = await sendPasswordResetEmail(email);\n    console.log('Password reset response:', response); // Log the response\n    if (response.success) {\n      setMessage('If this email is registered, you will receive a password reset link.');\n    } else {\n      setMessage('If this email is registered, you will receive a password reset link.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lost Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reset-password-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetPassword,\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","sendPasswordResetEmail","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","message","setMessage","handleResetPassword","response","console","log","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/farde/OneDrive/Startup/Prop-Firm/frontend/src/pages/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/ForgotPassword.css'; // Import the CSS file for styling\r\nimport { sendPasswordResetEmail } from '../services/authService'; // Import the mock backend service\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = async () => {\r\n    const response = await sendPasswordResetEmail(email);\r\n    console.log('Password reset response:', response); // Log the response\r\n    if (response.success) {\r\n      setMessage('If this email is registered, you will receive a password reset link.');\r\n    } else {\r\n      setMessage('If this email is registered, you will receive a password reset link.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password\">\r\n      <div className=\"forgot-password-container\">\r\n        <h2>Lost Password</h2>\r\n        {message ? (\r\n          <p>{message}</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"form-group\">\r\n              <label>Your Email</label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n              />\r\n            </div>\r\n            <div className=\"reset-password-btn\">\r\n              <button onClick={handleResetPassword}>Reset Password</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B,CAAC,CAAC;AACtC,SAASC,sBAAsB,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,QAAQ,GAAG,MAAMZ,sBAAsB,CAACO,KAAK,CAAC;IACpDM,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC,CAAC,CAAC;IACnD,IAAIA,QAAQ,CAACG,OAAO,EAAE;MACpBL,UAAU,CAAC,sEAAsE,CAAC;IACpF,CAAC,MAAM;MACLA,UAAU,CAAC,sEAAsE,CAAC;IACpF;EACF,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bf,OAAA;MAAKc,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCf,OAAA;QAAAe,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBZ,OAAO,gBACNP,OAAA;QAAAe,QAAA,EAAIR;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEhBnB,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA;UAAKc,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBf,OAAA;YAAAe,QAAA,EAAO;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzBnB,OAAA;YACEoB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEhB,KAAM;YACbiB,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,WAAW,EAAC;UAAkB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNnB,OAAA;UAAKc,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjCf,OAAA;YAAQ0B,OAAO,EAAEjB,mBAAoB;YAAAM,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAvCID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}